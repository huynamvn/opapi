info:
  description: |
    # Introduction
    Our API has predictable, resource-oriented URLs and uses HTTP response codes to indicate API errors. We use built-in HTTP features, such as HTTP authentication and HTTP terminology, which can be understood by HTTP clients. JSON will be returned in all responses from the API, including errors.
    # Responses
    The API uses HTTP response codes to show success or failure of an API request. In general, 2xx codes indicate success, 4xx codes indicate an error that resulted from the provided information (e.g. a required parameter is missing or invalid, etc.), and codes in the 5xx range indicate an error connected with our servers.
    # HTTP Status Code Summary
    | Code | Description                                                 |
    |------|-------------------------------------------------------------|
    | 2xx  | OK - Request has been completed successfully.               |
    | 400  | Bad Request - Required parameter is missing.                |
    | 401  | Unauthorized - Provided credentials are invalid or your API token has expired. |
    | 403  | Forbidden - Access denied. You do not have enough rights.   |
    | 404  | Not Found - Requested item doesn't exist.                   |
    | 429  | Too Many Requests - You have exceeded the number of allowed requests for your resources. |
    | 503  | Service Unavailable - You have made a mistake in request parameters or the service is currently unavailable. |
    | 500  | Server Error - Something went wrong on our end.             |
    | 502  | Bad Gateway - The server received an invalid response from an upstream server. |
    | 504  | Gateway Timeout - The server did not receive a timely response from an upstream server. |
  title: CDN
  version: 1.0.0
  x-logo:
    url: https://jupitek.vn/wp-content/uploads/2022/12/Logo-Jupitek-04-01.png.webp
openapi: 3.0.1
externalDocs:
  description: |
    Welcome to CDN API documentation. The API documentation provides requests to manage CDN service and get statistics.
  url: 'https://api-cdn.jupitek.vn'
paths:
  "/api/v1.0/analytic/get-data":
    post:
      tags:
      - AnalyticApi
      summary: Get Analytics data by queries and filters
      description: Get Analytics data by queries and filters
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filter_time:
                  type: string
                  description: 'This field define the time range you want to filter,
                    format is %d/%m/%Y %H:%M:%S - %d/%m/%Y %H:%M:%S. Default - fromTime:
                    now()-30mins, toTime:: now()'
                  example: 01/08/2020 00:00:01 - 01/08/2020 23:59:59
                group_id:
                  type: string
                  description: Group ID that you want to get data from.
                  example: '1'
                queries:
                  type: array
                  description: 'Support items in this list: [''status_type_pie'',
                    ''hitmiss_pie'', ''file_size_pie'', ''file_type_pie'', ''site'',
                    ''referer'']'
                  example:
                  - status_type_pie
                  - hitmiss_pie
                  items:
                    type: string
                site_ids:
                  type: array
                  description: List Site ID that you want to get data. Default value
                    is [] - get all sites that you've owned.
                  example:
                  - 1
                  - 2
                  items:
                    type: string
        required: true
      responses:
        '200':
          description: Purge Successful
          content:
            application/json:
              schema:
                required:
                - error_code
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
                  error_code:
                    type: integer
                  message:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/caching/prefetch/{site_id}":
    post:
      tags:
      - CachingApi
      summary: Prefetch CDN caching by file urls
      description: Prefetch Cache
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: string
                  description: Group ID that you want to get data from.
                  example: '1'
                hotfix:
                  type: integer
                  description: 'Value: 1(on)/0(off). This option allow user to run
                    prefetch requests on the top priority. Note: limited 100 files/day'
                  example: 0
                list_files:
                  type: array
                  example:
                  - https://167051323.e.cdneverest.net/storage20/hh247/images/1535173995o-long-vien-2018.jpg
                  - https://167051323.e.cdneverest.net/storage20/hh247/images/1535173995o-long-vien-2019.jpg
                  items:
                    type: string
        required: true
      responses:
        '200':
          description: Prefetch Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/caching/purge/{site_id}":
    post:
      tags:
      - CachingApi
      summary: Purge CDN caching by file urls
      description: Purge Cache
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: string
                  description: Group ID that you want to get data from. You can get
                    from api /list/group
                  example: '1'
                hotfix:
                  type: integer
                  description: 'Value: 1(on)/0(off). This option allow user to run
                    purge requests on the top priority. Note: limited 100 files/day'
                  example: 0
                list_files:
                  type: array
                  description: List files that you want to remove from CDN. If you
                    want to purge all, you should input this value ["*"]
                  example:
                  - https://167051323.e.cdneverest.net/storage20/hh247/images/1535173995o-long-vien-2018.jpg
                  - https://167051323.e.cdneverest.net/storage20/hh247/images/1535173995o-long-vien-2019.jpg
                  items:
                    type: string
        required: true
      responses:
        '200':
          description: Purge Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/caching/verify-result/{site_id}":
    post:
      tags:
      - CachingApi
      summary: This API is allow user to get result of request verify checksum cache
        cdn by url
      description: This API is allow user to get result of request verify checksum
        cache cdn by url
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file_url:
                  type: string
                  description: File url that you want to get verify result.
                  example: https://167051323.e.cdneverest.net/storage20/hh247/images/1535173995o-long-vien-2018.jpg
                group_id:
                  type: string
                  description: Group ID that you want to get data from.
                  example: '1'
        required: true
      responses:
        '200':
          description: Get Verification Result Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                  verify_result:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/caching/verify/{site_id}":
    post:
      tags:
      - CachingApi
      summary: This API is allow user to verify checksum of cached files
      description: This API is allow user to verify checksum of cached files
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: string
                  description: Group ID that you want to get data from.
                  example: '1'
                list_files:
                  type: array
                  example:
                  - https://167051323.e.cdneverest.net/storage20/hh247/images/1535173995o-long-vien-2018.jpg
                  - https://167051323.e.cdneverest.net/storage20/hh247/images/1535173995o-long-vien-2019.jpg
                  items:
                    type: string
        required: true
      responses:
        '200':
          description: Verify Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/cname/add/{group_id}/{site_id}":
    post:
      tags:
      - CNAMEApi
      summary: add CNAME to CDN Site
      description: add CNAME to CDN Site
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cname:
                  type: string
                  description: CNAME domain.
                  example: cdn.sport.com
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CNAMEInfoResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/cname/delete/{group_id}/{site_id}":
    post:
      tags:
      - CNAMEApi
      summary: Delete CNAME
      description: Delete CNAME
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DomainForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeneralResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/cname/info/{group_id}/{site_id}":
    post:
      tags:
      - CNAMEApi
      summary: Get Site's CNAME information
      description: Get Site's CNAME information
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DomainForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CNAMEInfoResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/cname/list/{group_id}/{site_id}":
    get:
      tags:
      - CNAMEApi
      summary: List Site's CNAME in project
      description: List Site's CNAME in project
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CNAMEListResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/cname/verify/{group_id}/{site_id}":
    post:
      tags:
      - CNAMEApi
      summary: Verify CNAME
      description: Verify CNAME
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DomainForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CNAMEInfoResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/group/list":
    get:
      tags:
      - GroupApi
      summary: Get Member's Groups list
      description: Get Member's Groups list
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: Pagination - offset
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: limit
        in: query
        description: Pagination - number of response records limitation
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupListResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/metric/get-traffic":
    post:
      tags:
      - MetricApi
      summary: Get total Traffic data is transferred from EDGE, ORIGIN
      description: Get total Traffic data is transferred from EDGE, ORIGIN
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TrafficRequest"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrafficDataResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/site-setting/edge-setting/{group_id}/{site_id}":
    post:
      tags:
      - SiteSettingApi
      summary: Setup Site Edge Setting
      description: Setup Site Edge Setting
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SiteEdgeSettingForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SiteEdgeSettingResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/site-setting/firewall-setting/{group_id}/{site_id}":
    post:
      tags:
      - SiteSettingApi
      summary: Setup Site Firewall Setting
      description: Setup Site Firewall Setting
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SiteFirewallSetting"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SiteFirewallSettingResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/site-setting/update-cors":
    post:
      tags:
      - SiteSettingApi
      summary: Update site cors header
      description: Update site cors header
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: query
        description: Numeric ID of the project that site is belong to.
        required: true
        style: form
        explode: true
      - name: site_id
        in: query
        description: Numeric ID of the Site.
        required: true
        style: form
        explode: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cors_domains:
                  type: array
                  description: List cors header domains.
                  example:
                  - "*.sport.net"
                  - "*.space.net"
                  items:
                    type: string
                enable_cors:
                  type: integer
                  description: 'Enable cors header. Option: 1(on) / 0(off). When CORS
                    support is enabled, If you don''t set any domains, default value
                    in header is ''Access-Control-Allow-Origin: *'''
                  example: 1
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SiteSettingCorsHeaderResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/site-setting/update-referer":
    post:
      tags:
      - SiteSettingApi
      summary: Update site referer setting
      description: Update site referer setting
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: query
        description: Numeric ID of the project that site is belong to.
        required: true
        style: form
        explode: true
      - name: site_id
        in: query
        description: Numeric ID of the Site.
        required: true
        style: form
        explode: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                secure_http_refer:
                  type: array
                  description: List Referer's domains.
                  example:
                  - refer1.sport.net
                  - refer2.sport.net
                  items:
                    type: string
                secure_http_refer_allow_none:
                  type: integer
                  description: 'Allow none referer domain. Option: 1(on) / 0(off)'
                  example: 0
                secure_http_refer_enable:
                  type: integer
                  description: 'Enable secure http referer option. Option: 1(on) /
                    0(off)'
                  example: 1
                secure_http_refer_wildcard:
                  type: array
                  description: List Referer's wildcard domains.
                  example:
                  - "*.sport.net"
                  - "*.space.net"
                  items:
                    type: string
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SiteSettingRefererResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/site-url-setting/add/{group_id}/{site_id}":
    post:
      tags:
      - UrlSettingApi
      summary: Add Site URL Setting
      description: Add Site URL Setting
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/URLSettingForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/URLSettingAddResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/site-url-setting/list/{group_id}/{site_id}":
    get:
      tags:
      - UrlSettingApi
      summary: List Site in project
      description: List Site in project
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/URLSettingResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/site-url-setting/update/{group_id}/{site_id}":
    post:
      tags:
      - UrlSettingApi
      summary: Update Site URL Setting
      description: Update Site URL Setting
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/URLSettingUpdateForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/URLSettingAddResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/site/create/{group_id}":
    post:
      tags:
      - SiteApi
      summary: Create CDN site
      description: Create CDN site
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SiteForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SiteInfoResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/site/delete/{group_id}/{site_id}":
    delete:
      tags:
      - SiteApi
      summary: Delete Site
      description: Delete Site
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                required:
                - error_code
                type: object
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/site/disable-site/{group_id}/{site_id}":
    put:
      tags:
      - SiteApi
      summary: Disable an active Site
      description: Disable an active Site
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                required:
                - error_code
                type: object
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/site/enable-site/{group_id}/{site_id}":
    put:
      tags:
      - SiteApi
      summary: Enable inactivated Site
      description: Enable inactivated Site
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                required:
                - error_code
                type: object
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/site/info/{group_id}/{site_id}":
    get:
      tags:
      - SiteApi
      summary: Get Site's metadata information
      description: Get Site's metadata information
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: ID of the Site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SiteInfoResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/site/list/{group_id}":
    get:
      tags:
      - SiteApi
      summary: List Site in project
      description: List Site in project
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SiteListResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/site/site-setup/{group_id}/{site_id}":
    post:
      tags:
      - SiteApi
      summary: Setup CDN site
      description: Setup CDN site
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: site_id
        in: path
        description: Numeric ID of the Site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SiteSetupForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SiteInfoResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/ssl/add-cert/{group_id}":
    post:
      tags:
      - SSLCertificationAPI
      summary: Upload SSL Certificate
      description: Upload SSL Certificate
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AddCertForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AddCertResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/ssl/deploy/{group_id}":
    post:
      tags:
      - SSLCertificationAPI
      summary: Support deploy cert on list CNAMES
      description: Support deploy cert on list CNAMES
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CertDeployment"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/ssl/generate-free-cert/{group_id}":
    post:
      tags:
      - SSLCertificationAPI
      summary: Generate LetsEncryption Cert
      description: Generate LetsEncryption Cert
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GenerateCertForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GenerateCertResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/ssl/get-cert-info/{group_id}":
    post:
      tags:
      - SSLCertificationAPI
      summary: Api get SSL Certificate information
      description: Api get SSL Certificate information
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on our dashboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RequestCertForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CertInfoResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/ssl/list/{group_id}":
    get:
      tags:
      - SSLCertificationAPI
      summary: Get List SSL Certification by Project
      description: Get List SSL Certification by Project
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group_id
        in: path
        description: ID of project, you can find it on api /group/list
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: Pagination - offset
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: limit
        in: query
        description: Pagination - number of response records limitation
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GroupListResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/statistic/get-data":
    post:
      tags:
      - StatisticApi
      summary: Get Statistic data by queries and filters
      description: Get Statistic data by queries and filters
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filter_time:
                  type: string
                  description: 'This field define the time range you want to filter,
                    format is %d/%m/%Y %H:%M:%S - %d/%m/%Y %H:%M:%S. Default - fromTime:
                    now()-30mins, toTime:: now()'
                  example: 01/08/2020 00:00:01 - 01/08/2020 23:59:59
                group_id:
                  type: string
                  description: Group ID that you want to get data from.
                  example: '1'
                site_ids:
                  type: array
                  description: List Site ID that you want to get data. Default value
                    is [] - get all sites that you've owned.
                  example:
                  - 1
                  - 2
                  items:
                    type: string
        required: true
      responses:
        '200':
          description: Purge Successful
          content:
            application/json:
              schema:
                required:
                - error_code
                type: object
                properties:
                  data:
                    type: object
                  error_code:
                    type: integer
                  message:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/statistic/get-file-type-data":
    post:
      tags:
      - StatisticApi
      summary: Get Statistic data group by file type.
      description: Get Statistic data group by file type.
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                extensions:
                  type: array
                  description: List of extensions that you want to get data. Default
                    value is [] - get all extensions that your's sites served.
                  example:
                  - m3u8
                  - mp4
                  items:
                    type: string
                filter_time:
                  type: string
                  description: 'This field define the time range you want to filter,
                    format is %d/%m/%Y %H:%M:%S - %d/%m/%Y %H:%M:%S. Default - fromTime:
                    now()-30mins, toTime:: now()'
                  example: 01/08/2020 00:00:01 - 01/08/2020 23:59:59
                group_id:
                  type: string
                  description: Group ID that you want to get data from.
                  example: '1'
                site_ids:
                  type: array
                  description: List Site ID that you want to get data. Default value
                    is [] - get all sites that you've owned.
                  example:
                  - 1
                  - 2
                  items:
                    type: string
        required: true
      responses:
        '200':
          description: Purge Successful
          content:
            application/json:
              schema:
                required:
                - error_code
                type: object
                properties:
                  data:
                    type: object
                  error_code:
                    type: integer
                  message:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/statistic/get-referer-data/{offset}/{limit}":
    post:
      tags:
      - StatisticApi
      summary: Get Analytics referer's data by Site
      description: Get Analytics referer's data by Site
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: path
        description: Pagination - offset
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: limit
        in: path
        description: Pagination - number of response records limitation
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filter_time:
                  type: string
                  description: 'This field define the time range you want to filter,
                    format is %d/%m/%Y %H:%M:%S - %d/%m/%Y %H:%M:%S. Default - fromTime:
                    now()-30mins, toTime:: now()'
                  example: 01/08/2020 00:00:01 - 01/08/2020 23:59:59
                group_id:
                  type: string
                  description: Group ID that you want to get data from.
                  example: '1'
                site_ids:
                  type: array
                  description: List Site ID that you want to get data. Default value
                    is [] - get all sites that you've owned.
                  example:
                  - 1
                  - 2
                  items:
                    type: string
        required: true
      responses:
        '200':
          description: Purge Successful
          content:
            application/json:
              schema:
                required:
                - error_code
                type: object
                properties:
                  data:
                    type: object
                  error_code:
                    type: integer
                  message:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/statistic/get-uri-data":
    post:
      tags:
      - StatisticApi
      summary: Get Statistic url data by referer
      description: Get Statistic url data by referer
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filter_time:
                  type: string
                  description: 'This field define the time range you want to filter,
                    format is %d/%m/%Y %H:%M:%S - %d/%m/%Y %H:%M:%S. Default - fromTime:
                    now()-30mins, toTime:: now()'
                  example: 01/08/2020 00:00:01 - 01/08/2020 23:59:59
                group_id:
                  type: string
                  description: Group ID that you want to get data from.
                  example: '1'
                referers:
                  type: array
                  description: List referer domains that you get from api /statistic/get-referer-data
                  example:
                  - https://s1.evgcdn.net
                  - https://s3.evgcdn.net
                  items:
                    type: string
        required: true
      responses:
        '200':
          description: Purge Successful
          content:
            application/json:
              schema:
                required:
                - error_code
                type: object
                properties:
                  data:
                    type: object
                  error_code:
                    type: integer
                  message:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/user/active":
    put:
      tags:
      - UserAPI
      summary: Api active sub user.
      description: Api active sub user.
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserEmailForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/user/change-user-password":
    post:
      tags:
      - UserAPI
      summary: Api change sub user password
      description: Api change sub user password
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ChangePasswordForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/user/create":
    post:
      tags:
      - UserAPI
      summary: Api create sub user
      description: Api create sub user
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegisterUserForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/user/disable":
    post:
      tags:
      - UserAPI
      summary: 'Api disable sub user. Warning: All sites of the project that owned
        by this user have to disable before disable account.'
      description: 'Api disable sub user. Warning: All sites of the project that owned
        by this user have to disable before disable account.'
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserEmailForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/user/list":
    get:
      tags:
      - UserAPI
      summary: Api list sub user
      description: Api list sub user
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListUserResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/user/user-api-key":
    post:
      tags:
      - UserAPI
      summary: Get sub user API key
      description: Get sub user API key
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserEmailForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserKeyResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
  "/api/v1.0/user/user-info":
    post:
      tags:
      - UserAPI
      summary: Api get sub user info
      description: Api get sub user info
      parameters:
      - name: X-Auth-Key
        in: header
        description: The API Authentication Key
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserEmailForm"
        required: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserResult"
        '400':
          "$ref": "#/components/responses/400"
        '401':
          "$ref": "#/components/responses/401"
        '500':
          "$ref": "#/components/responses/500"
      security:
      - jwt: []
components:
  schemas:
    AddCertForm:
      required:
      - cert_crt
      - cert_key
      type: object
      properties:
        cert_crt:
          type: string
          description: CNAME SSL Certification CRT in BASE64 string
          example: base64_string
        cert_key:
          type: string
          description: CNAME SSL Certification private key in BASE64 string
          example: base64_string
    AddCertResult:
      required:
      - cert_id
      - error_code
      type: object
      properties:
        cert_id:
          type: string
          description: ID of SSL Certificate
          example: fh45g-5fdsdb-4kiy7tb-lbnjg2255
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    CNAME:
      type: object
      properties:
        domain:
          type: string
          description: CNAME domain
          example: my-cname.sport.com
        id:
          type: integer
          description: ID of CNAME
          example: 1
        ssl_cert:
          description: CNAME SSL Certification info
          example: "{}"
          allOf:
          - "$ref": "#/components/schemas/AddCertForm"
        status:
          type: string
          description: CNAME's status. (ACTIVE|UNVERIFIED|PROCESSING)
          example: ACTIVE
        verify_text:
          type: string
          description: CNAME text verification
          example: hkiG9w0BAQEFAASCBKYwggSiAg
    CNAMEInfoResult:
      required:
      - error_code
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/CNAME"
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    CNAMEListResult:
      required:
      - error_code
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/CNAME"
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    CName:
      type: object
      properties:
        id:
          type: integer
          description: ID of CNAME
        name:
          type: string
          description: CNAME domain
          example: cname-sport.cdn.com
    CacheQuery:
      type: object
      properties:
        cache_query_specific_params:
          type: array
          description: This option allows the user to enter additional parameters
            in the query params to generate cache key on EDGE CDN.
          example:
          - uid
          - manifest
          items:
            type: string
        enable_cached_query_string:
          type: integer
          description: 'Enable cached query by params. Option: 0 (off) / 1 (cache
            all query params) / 2 (cache by customized key)s'
          example: 0
    CertDeployment:
      type: object
      properties:
        cert_id:
          type: string
          description: ID of SSL Certificate
          example: fh45g-5fdsdb-4kiy7tb-lbnjg2255
        cnames:
          type: array
          description: List ID of CNAMEs that user want to deploy this cert.
          example:
          - cname1.cdn.com
          - cname2.cdn.com
          items:
            type: string
    CertInfoResult:
      required:
      - error_code
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/Certification"
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    Certification:
      type: object
      properties:
        cert_crt:
          type: string
          description: CNAME SSL Certification CRT in BASE64 string
          example: "-----BEGIN CERTIFICATE-----....-----END CERTIFICATE-----"
        cert_id:
          type: string
          description: ID of SSL Certificate
          example: fh45g-5fdsdb-4kiy7tb-lbnjg2255
        cert_key:
          type: string
          description: CNAME SSL Certification private key in BASE64 string
          example: "-----BEGIN PRIVATE KEY-----....-----END PRIVATE KEY-----"
        cert_type:
          type: string
          description: 'SSL Certification type. We''re supporting 2 type: UserSSL|FreeSSL'
          example: UserSSL
        expired_on:
          type: string
          description: SSL Certification expired time
          example: '2023-07-02T06:31:21+00:00'
    ChangePasswordForm:
      type: object
      properties:
        email:
          type: string
          description: User email
          format: email
        password:
          type: string
          description: User password. plain text
          example: ''
    CorsSupport:
      type: object
      properties:
        cors_domains:
          type: array
          description: List cors header domains.
          example:
          - cors1.sport.com
          - cors2.sport.com
          items:
            type: string
        enable_cors:
          type: integer
          description: 'Enable CORS Support. Option: 1(on) / 0(off)'
          example: 0
    DefaultDict:
      type: object
      properties:
        key:
          type: string
          example: value
    DomainForm:
      type: object
      properties:
        domain:
          type: string
          description: CNAME domain
          example: my-cname.sport.com
    GeneralResult:
      required:
      - error_code
      type: object
      properties:
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    GenerateCertForm:
      required:
      - cname
      type: object
      properties:
        cname:
          type: string
          description: ID of CNAME
          example: '1001'
    GenerateCertResult:
      required:
      - error_code
      type: object
      properties:
        data:
          type: string
          description: Data information
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    GeoProtection:
      type: object
      properties:
        geo_protection_countries:
          type: array
          description: List of Country Codes. You can find from api /country/list
          example:
          - AD
          - AE
          items:
            type: string
        geo_protection_enable:
          type: integer
          description: 'Option: 1(on) / 0(off)'
          example: 0
        geo_protection_type:
          type: integer
          description: 'Option: 1(Whitelist) / 2(Blacklist)'
          example: 1
    Group:
      type: object
      properties:
        id:
          type: integer
          description: ID of group
        name:
          type: string
          description: Name of group
        owner:
          type: string
          description: Email of user
    GroupListResult:
      required:
      - error_code
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/Group"
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    IPProtection:
      type: object
      properties:
        ip_protection_cidr:
          type: array
          description: List of CIDR Address.
          example:
          - 192.168.129.23/17
          - 10.0.0.0/24
          items:
            type: string
        ip_protection_enable:
          type: integer
          description: 'Option: 1(on) / 0(off)'
          example: 0
        ip_protection_type:
          type: integer
          description: 'Option: 1(Whitelist) / 2(Blacklist)'
          example: 1
    ListUserResult:
      required:
      - error_code
      type: object
      properties:
        data:
          type: array
          description: Data information
          items:
            "$ref": "#/components/schemas/UserInfo"
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    Package:
      type: object
      properties:
        id:
          type: integer
          description: CDN Package ID
          example: 1
        name:
          type: string
          description: CDN Package name
          example: ''
    RateLimiting:
      type: object
      properties:
        rate_limiting_enable:
          type: integer
          description: 'Option: 1(on) / 0(off)'
          example: 0
        rate_limiting_request:
          type: integer
          description: 'Number of requests. Values: 1-9999'
          example: 1
        rate_limiting_request_type:
          type: string
          description: 'Support 2 types: s (requests/second), m (requests/minute)'
          example: s
        rate_limiting_type:
          type: integer
          description: 'Option: 1(Limit by URI), 2(Limit by IP Address)'
          example: 1
    RefererAccessRule:
      type: object
      properties:
        secure_http_refer:
          type: array
          description: List Referer's domains.
          example:
          - refer1.sport.com
          - refer2.sport.com
          items:
            type: string
        secure_http_refer_allow_none:
          type: integer
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
          example: 0
        secure_http_refer_enable:
          type: integer
          description: 'Enable secure http referer option. Option: 1(on) / 0(off)'
          example: 0
        secure_http_refer_wildcard:
          type: array
          description: List Referer's wildcard domains.
          example:
          - "*.sport.com"
          - "*.football.com"
          items:
            type: string
    RegisterUserForm:
      type: object
      properties:
        email:
          type: string
          description: User email
          format: email
        full_name:
          type: string
          description: User full name
          example: Hoang Duong
        package_id:
          type: integer
          description: User package id. You can get it from CDN dashboard or get from
            package api.
          example: 1
        password:
          type: string
          description: User password. plain text
          example: ''
        verify:
          type: integer
          description: 'Set verify user, if this option is enabled then you can using
            service without submit ticket request.  Option: 1(on) / 0(off)'
          example: 0
    RequestCertForm:
      required:
      - cert_id
      type: object
      properties:
        cert_id:
          type: string
          description: ID of SSL Certificate
          example: fh45g-5fdsdb-4kiy7tb-lbnjg2255
    RequestCollapsing:
      type: object
      properties:
        enable_request_collapsing:
          type: integer
          description: 'Option: 1(on) / 0(off)'
          example: 0
        request_collapsing_timeout:
          type: integer
          description: By sec. Value from 1 to 10.
          example: 3
    RequestHeader:
      type: object
      properties:
        customize_header_items:
          type: array
          description: Customize header items.
          example:
          - x-customize: customize-value
          items:
            "$ref": "#/components/schemas/DefaultDict"
        removed_headers_on_request:
          type: array
          description: Remove these header keys from Request's Headers to Origin Server
          example:
          - Cache-Control
          - Accept-Encoding
          items:
            type: string
        request_header_enable:
          type: integer
          description: 'Option: 1(on) / 0(off)'
          example: 0
    ResponseHeader:
      type: object
      properties:
        customize_header_items:
          type: array
          description: Customized response header items.
          example:
          - x-customize: customize-value
          items:
            "$ref": "#/components/schemas/DefaultDict"
        removed_headers_on_response:
          type: array
          description: Remove these header keys from Response's Headers
          example:
          - X-Cache
          - X-Amz-Cf-Id
          items:
            type: string
        response_header_enable:
          type: integer
          description: 'This option allow to adding valid customized header on response.
            Option: 1(on) / 0(off)'
          example: 0
    SecureHTTPMethods:
      type: object
      properties:
        enable_secure_http_methods:
          type: integer
          description: 'Enable secure HTTP methods. Option: 1(on) / 0(off)'
          example: 0
        secure_http_methods:
          type: integer
          description: 'List HTTP methods. Values: POST|PUT|PATCH'
    SecureLink:
      type: object
      properties:
        secure_cdn_link_additional_params:
          type: array
          description: 'This option allows the user to enter additional parameters
            in the query params to generate a secure token. Eg: uid'
          example:
          - uid
          - manifest
          items:
            type: string
        secure_cdn_link_by_ip:
          type: integer
          description: 'Allow secure link by client IP. Option: 1(on) / 0(off)'
          example: 0
        secure_cdn_link_enable:
          type: integer
          description: 'Enable secure cdn link. Option: 1(on) / 0(off)'
          example: 0
        secure_cdn_link_key:
          type: string
          description: Secure link secret key.
          example: your-private-key
        secure_cdn_link_rewrite_m3u8:
          type: integer
          description: 'Option: 1(on) / 0(off)'
          example: 0
        secure_cdn_link_type:
          type: integer
          description: 'Secure link type. Option: 1(By params) | 2(By path)'
          example: 1
    Site:
      type: object
      properties:
        CorsSupport:
          description: 'Send a header to allow client browsers to integrate other
            data and javascript from this domain, or from any domain. When CORS support
            is enabled, If you don''t set any domains, default value in header is
            ''Access-Control-Allow-Origin: *'''
          allOf:
          - "$ref": "#/components/schemas/CorsSupport"
        FirewallSetting:
          "$ref": "#/components/schemas/SiteFirewallSetting"
        RefererAccessRule:
          description: The domain names that are in the allowlist to access CDN.
          allOf:
          - "$ref": "#/components/schemas/RefererAccessRule"
        RequestCollapsing:
          description: When this option is enable, What the CDN do is to take all
            the requests and 'collapse' them into a single request. When the origin
            responds with the file, the CDN delivers the file to all the clients that
            requested it.
          allOf:
          - "$ref": "#/components/schemas/RequestCollapsing"
        RequestHeader:
          description: This option allow to adding valid customized header on request
            to origin.
          allOf:
          - "$ref": "#/components/schemas/RequestHeader"
        ResponseHeader:
          description: This option allow to adding valid customized header on response.
          allOf:
          - "$ref": "#/components/schemas/ResponseHeader"
        SecureHTTPMethods:
          description: List HTTP methods supporting.
          allOf:
          - "$ref": "#/components/schemas/SecureHTTPMethods"
        SecureLink:
          description: The specific rules of Secure Link Authentication.
          allOf:
          - "$ref": "#/components/schemas/SecureLink"
        UrlSetting:
          "$ref": "#/components/schemas/URLSetting"
        UserAgentProtection:
          description: This option has been created to stop asset/media leakage by
            blocking User-Agent that you not trust.
          allOf:
          - "$ref": "#/components/schemas/UserAgentProtection"
        backup_origin:
          type: string
          description: Origin backup. Domain or IP Address.
        backup_port:
          type: string
          description: Origin backup port.
        cache_hit_number:
          type: integer
          description: 'Define number of request to an asset or media before edge
            perform cache these data. values: 1 to 100.'
        cache_keys_zone_size:
          type: integer
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
        cache_max_size:
          type: integer
          description: 'Set upper limit of the size cache on CDN. values: 1 to 10000.
            Default: 200 GB'
        cache_path_inactive_size:
          type: integer
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
        cache_path_inactive_size_type:
          type: string
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
        cdn_domain:
          type: string
          description: Site's cdn domain service.
        cdn_protocol:
          type: string
          description: 'Site''s CDN protocol. values: HTTP | SSL | HTTP,SSL'
        cname:
          type: array
          items:
            "$ref": "#/components/schemas/CName"
        delivery_type:
          type: integer
          description: 'Site''s delivery type. Value: 1(LIVE) | 2(VOD) | 3(STATIC
            ASSET)'
        dev_mode:
          type: integer
          description: Dev mode for testing purpose. When this option is enable, cdn
            caching wil be disabled. 1(on) / 0(off)
        enable_backup:
          type: integer
          description: Enable backup origin. 1(on) / 0(off)
        enable_brotli:
          type: integer
          description: 'Cache Brotli compressed assets from the origin server (Content-Encoding:
            br). Only enable this feature if your origin supports Brotli compression.
            Option: 1(on) / 0(off)'
        enable_cache_host_key:
          type: integer
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
        enable_cache_path_option:
          type: integer
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
        enable_cached_query_params:
          type: integer
          description: 'Enable cached query by params. Option: 0 (off) / 1 (cache
            all query params) / 2 (cache by customized key)s'
        enable_download_file:
          type: integer
          description: 'Enabled Download File. Option: 1(on) / 0(off)'
        enable_gzip:
          type: integer
          description: 'GZIP compression is enabled by default on all sites. By default,
            GZIP compresses txt, js, html, and css files, and the text/* mime type.
            Option: 1(on) / 0(off)'
        enable_host_header_forwarding:
          type: integer
          description: 'If enabled, we will pass the host header used in the CDN request
            when requesting the file from your origin domain. For this option to work,
            your origin server must accept requests from the CDN URL/CNAME domains.
            Option: 1(on) / 0(off)'
        enable_http2:
          type: integer
          description: 'Enable http2. Option: 1(on) / 0(off)'
        enable_redirect_http_to_https:
          type: integer
          description: 'Enable redirect http to https (force to https). Option: 1(on)
            / 0(off)'
        enable_secure_http_methods:
          type: integer
          description: 'Enable secure HTTP methods. Option: 1(on) / 0(off)'
        group:
          "$ref": "#/components/schemas/Group"
        id:
          type: integer
          description: Id of site
        ignore_set_cookie:
          type: integer
          description: 'Ignore set cookie. Option: 1(on) / 0(off)'
        max_age:
          type: integer
          description: 'Set default browser expiration time for cached assets that
            don''t already have an expiration time set on the origin. valid values
            from: -1 to 31536000. Default: 25200 secs'
        name:
          type: string
          description: Site's name
        origin:
          type: string
          description: Site origin ip/domain
        origin_ssl:
          type: integer
          description: Site origin ssl enable. 1(on) / 0(off)
        status:
          type: string
          description: Site's status. (ACTIVE|DISABLED|PROCESSING)
        ttl:
          type: integer
          description: 'Define when and for how long content is stored on the CDN
            cache before it expires and is replaced with new content from your origin.
            valid values from: 0 to 31536000. Default: 25200 secs'
    SiteEdgeSetting:
      type: object
      properties:
        cache_hit_number:
          type: integer
          description: 'Define number of request to an asset or media before edge
            perform cache these data. values: 1 to 100.'
          example: 1
        cors_domains:
          type: array
          description: List cors header domains.
          example:
          - cors1.sport.com
          - cors2.sport.com
          items:
            type: string
        customize_header_enable:
          type: integer
          description: 'This option allow to adding valid customized header on response.
            Option: 1(on) / 0(off)'
          example: 0
        customize_header_items:
          type: array
          description: Customized response header items.
          example:
          - x-customize: customize-value
          items:
            "$ref": "#/components/schemas/DefaultDict"
        enable_aes:
          type: integer
          description: 'Use Encryption to protect your asset/media over internet.
            Option: 1(on) / 0(off)'
          example: 0
        enable_aes_refresh_token:
          type: integer
          description: 'This makes your content more secure, as it cannot be easily
            decoded by unauthorized users. Option: 1(on) / 0(off)'
          example: 0
        enable_brotli:
          type: integer
          description: 'Cache Brotli compressed assets from the origin server (Content-Encoding:
            br). Only enable this feature if your origin supports Brotli compression.
            Option: 1(on) / 0(off)'
          example: 0
        enable_cached_query_params:
          type: integer
          description: 'Enable cached query by params. Option: 0 (off) / 1 (cache
            all query params) / 2 (cache by customized key)s'
          example: 0
        enable_cors:
          type: integer
          description: 'Enable CORS Support. Option: 1(on) / 0(off)'
          example: 0
        enable_download_file:
          type: integer
          description: 'Enabled Download File. Option: 1(on) / 0(off)'
          example: 0
        enable_gzip:
          type: integer
          description: 'GZIP compression is enabled by default on all sites. By default,
            GZIP compresses txt, js, html, and css files, and the text/* mime type.
            Option: 1(on) / 0(off)'
          example: 0
        enable_host_header_forwarding:
          type: integer
          description: 'If enabled, we will pass the host header used in the CDN request
            when requesting the file from your origin domain. For this option to work,
            your origin server must accept requests from the CDN URL/CNAME domains.
            Option: 1(on) / 0(off)'
          example: 0
        enable_http2:
          type: integer
          description: 'Enable http2. Option: 1(on) / 0(off)'
          example: 0
        enable_redirect_http_to_https:
          type: integer
          description: 'Enable redirect http to https (force to https). Option: 1(on)
            / 0(off)'
          example: 0
        enable_request_collapsing:
          type: integer
          description: 'Option: 1(on) / 0(off)'
          example: 0
        enable_secure_http_methods:
          type: integer
          description: 'Enable secure HTTP methods. Option: 1(on) / 0(off)'
          example: 0
        ignore_set_cookie:
          type: integer
          description: 'Ignore set cookie. Option: 1(on) / 0(off)'
          example: 0
        max_age:
          type: integer
          description: 'Set default browser expiration time for cached assets that
            don''t already have an expiration time set on the origin. valid values
            from: -1 to 31536000. Default: 25200 secs'
          example: 25200
        request_collapsing_timeout:
          type: integer
          description: By sec. Value from 1 to 10.
          example: 3
        secure_cdn_link_by_ip:
          type: integer
          description: 'Allow secure link by client IP. Option: 1(on) / 0(off)'
          example: 0
        secure_cdn_link_enable:
          type: integer
          description: 'Enable secure cdn link. Option: 1(on) / 0(off)'
          example: 0
        secure_cdn_link_key:
          type: string
          description: Secure link secret key.
          example: your-private-key
        secure_cdn_link_type:
          type: integer
          description: 'Secure link type. Option: 1(By params) | 2(By path)'
          example: 1
        secure_http_methods:
          type: array
          description: List HTTP methods supporting.
          example:
          - PURGE
          - OPTION
          items:
            type: string
        secure_http_refer:
          type: array
          description: List Referer's domains.
          example:
          - refer1.sport.com
          - refer2.sport.com
          items:
            type: string
        secure_http_refer_allow_none:
          type: integer
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
          example: 0
        secure_http_refer_enable:
          type: integer
          description: 'Enable secure http referer option. Option: 1(on) / 0(off)'
          example: 0
        secure_http_refer_wildcard:
          type: array
          description: List Referer's wildcard domains.
          example:
          - "*.sport.com"
          - "*.football.com"
          items:
            type: string
        ttl:
          type: integer
          description: 'Define when and for how long content is stored on the CDN
            cache before it expires and is replaced with new content from your origin.
            valid values from: 0 to 31536000. Default: 25200 secs'
          example: 25200
        useragent_protection_enable:
          type: integer
          description: 'This option has been created to stop asset/media leakage by
            blocking User-Agent that you not trust. Option: 1(on) / 0(off)'
          example: 0
        useragent_protection_list:
          type: array
          description: 'List allowed useragent. Eg: Chrome, Mozilla/5.0 ..'
          example:
          - Chrome
          - Mozilla/5.0
          items:
            type: string
    SiteEdgeSettingForm:
      type: object
      properties:
        CacheQuery:
          description: Allow user control CDN's cache key by using query params
          allOf:
          - "$ref": "#/components/schemas/CacheQuery"
        CorsSupport:
          description: 'Send a header to allow client browsers to integrate other
            data and javascript from this domain, or from any domain. When CORS support
            is enabled, If you don''t set any domains, default value in header is
            ''Access-Control-Allow-Origin: *'''
          allOf:
          - "$ref": "#/components/schemas/CorsSupport"
        RefererAccessRule:
          description: The domain names that are in the allowlist to access CDN.
          allOf:
          - "$ref": "#/components/schemas/RefererAccessRule"
        RequestCollapsing:
          description: When this option is enable, What the CDN do is to take all
            the requests and 'collapse' them into a single request. When the origin
            responds with the file, the CDN delivers the file to all the clients that
            requested it.
          allOf:
          - "$ref": "#/components/schemas/RequestCollapsing"
        RequestHeader:
          description: This option allow to adding valid customized header on request
            to origin.
          allOf:
          - "$ref": "#/components/schemas/RequestHeader"
        ResponseHeader:
          description: This option allow to adding valid customized header on response.
          allOf:
          - "$ref": "#/components/schemas/ResponseHeader"
        SecureHTTPMethods:
          description: List HTTP methods supporting.
          allOf:
          - "$ref": "#/components/schemas/SecureHTTPMethods"
        SecureLink:
          description: The specific rules of Secure Link Authentication.
          allOf:
          - "$ref": "#/components/schemas/SecureLink"
        UserAgentProtection:
          description: This option has been created to stop asset/media leakage by
            blocking User-Agent that you not trust.
          allOf:
          - "$ref": "#/components/schemas/UserAgentProtection"
        cache_hit_number:
          type: integer
          description: 'Define number of request to an asset or media before edge
            perform cache these data. values: 1 to 100.'
          example: 1
        enable_brotli:
          type: integer
          description: 'Cache Brotli compressed assets from the origin server (Content-Encoding:
            br). Only enable this feature if your origin supports Brotli compression.
            Option: 1(on) / 0(off)'
          example: 0
        enable_download_file:
          type: integer
          description: 'Enabled Download File. Option: 1(on) / 0(off)'
          example: 0
        enable_gzip:
          type: integer
          description: 'GZIP compression is enabled by default on all sites. By default,
            GZIP compresses txt, js, html, and css files, and the text/* mime type.
            Option: 1(on) / 0(off)'
          example: 0
        enable_host_header_forwarding:
          type: integer
          description: 'If enabled, we will pass the host header used in the CDN request
            when requesting the file from your origin domain. For this option to work,
            your origin server must accept requests from the CDN URL/CNAME domains.
            Option: 1(on) / 0(off)'
          example: 0
        enable_http2:
          type: integer
          description: 'Enable http2. Option: 1(on) / 0(off)'
          example: 0
        enable_secure_http_methods:
          type: integer
          description: 'Enable secure HTTP methods. Option: 1(on) / 0(off)'
          example: 0
        enable_video_seeking:
          type: integer
          description: 'Allows users to seek to a particular position in a video during
            streaming. Option: 1(on) / 0(off)'
          example: 0
        force_to_https:
          type: integer
          description: 'Enable redirect http to https (force to https). Option: 1(on)
            / 0(off)'
          example: 0
        ignore_set_cookie:
          type: integer
          description: 'Ignore set cookie. Option: 1(on) / 0(off)'
          example: 0
        max_age:
          type: integer
          description: 'Set default browser expiration time for cached assets that
            don''t already have an expiration time set on the origin. valid values
            from: -1 to 31536000. Default: 25200 secs'
          example: 25200
        ttl:
          type: integer
          description: 'Define when and for how long content is stored on the CDN
            cache before it expires and is replaced with new content from your origin.
            valid values from: 0 to 31536000. Default: 25200 secs'
          example: 25200
    SiteEdgeSettingResult:
      required:
      - error_code
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/SiteEdgeSetting"
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    SiteFirewallSetting:
      type: object
      properties:
        GeoProtection:
          description: Setting blacklist countries. Any requests from these countries
            can not access your asset/media.
          example:
            geo_protection_countries: []
            geo_protection_enable: 0
            geo_protection_type: 1
          allOf:
          - "$ref": "#/components/schemas/GeoProtection"
        IPProtection:
          description: Setting your blacklist and whitelist by CIDR.
          example:
            ip_protection_cidr: []
            ip_protection_enable: 0
            ip_protection_type: 1
          allOf:
          - "$ref": "#/components/schemas/IPProtection"
        RateLimiting:
          description: Protect your site or API from malicious traffic by blocking
            client IP addresses that hit a URL pattern and exceed a threshold you
            define. Your existing Rate Limiting Rules are listed below.
          example:
            rate_limiting_enable: 0
            rate_limiting_request: 1
            rate_limiting_request_type: s
            rate_limiting_type: 1
          allOf:
          - "$ref": "#/components/schemas/RateLimiting"
        TransferLimiting:
          description: Allows you to limit the transfer rate of individual client
            connections. The rate is expressed in Kilobits per second.
          example:
            enable_limit_rate: 0
            limit_rate: 1
          allOf:
          - "$ref": "#/components/schemas/TransferLimiting"
    SiteFirewallSettingResult:
      required:
      - error_code
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/SiteFirewallSetting"
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    SiteForm:
      required:
      - delivery_type
      - name
      - origin
      - origin_port
      - origin_protocol
      type: object
      properties:
        delivery_type:
          type: string
          description: 'Site''s delivery type. Value: 1(LIVE) | 2(VOD) | 3(STATIC
            ASSET)'
          example: '3'
        name:
          type: string
          description: Site's name
          example: Static Asset Sport
        origin:
          type: string
          description: Site origin ip/domain
          example: static.sport.com
        origin_port:
          type: string
          description: Site origin port
          example: '443'
        origin_protocol:
          type: string
          description: 'Site origin protocol. Value: 0 (HTTP) | 1(HTTPS)'
          example: '1'
    SiteInfoResult:
      required:
      - error_code
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/Site"
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    SiteListResult:
      required:
      - error_code
      type: object
      properties:
        data:
          type: array
          items:
            "$ref": "#/components/schemas/Site"
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    SiteSettingCorsHeaderData:
      type: object
      properties:
        cors_domains:
          type: array
          description: List cors header domains.
          items:
            type: string
        enable_cors:
          type: integer
          description: 'Enable cors header. Option: 1(on) / 0(off). When CORS support
            is enabled, If you don''t set any domains, default value in header is
            ''Access-Control-Allow-Origin: *'''
    SiteSettingCorsHeaderResult:
      required:
      - error_code
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/SiteSettingCorsHeaderData"
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    SiteSettingRefererData:
      type: object
      properties:
        secure_http_refer:
          type: array
          description: List Referer's domains.
          items:
            type: string
        secure_http_refer_allow_none:
          type: integer
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
        secure_http_refer_enable:
          type: integer
          description: 'Enable secure http referer option. Option: 1(on) / 0(off)'
        secure_http_refer_wildcard:
          type: array
          description: List Referer's wildcard domains.
          items:
            type: string
    SiteSettingRefererResult:
      required:
      - error_code
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/SiteSettingRefererData"
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    SiteSetupForm:
      required:
      - backup_origin
      - backup_origin_port
      - cdn_protocols
      - enable_backup
      - origin
      - origin_port
      - origin_protocol
      type: object
      properties:
        backup_origin:
          type: string
          description: Origin backup. Domain or IP Address.
          example: backup-static.sport.com
        backup_origin_port:
          type: string
          description: Origin backup port.
          example: '443'
        cdn_protocols:
          type: string
          description: 'Site''s CDN protocol. values: HTTP | SSL | HTTP,SSL'
          example: HTTP
        enable_backup:
          type: string
          description: Enable backup origin. 1(on) / 0(off)
          example: '0'
        origin:
          type: string
          description: Site origin ip/domain
          example: static.sport.com
        origin_port:
          type: string
          description: Site origin port
          example: '443'
        origin_protocol:
          type: string
          description: 'Site origin protocol. Value: 0 (HTTP) | 1(HTTPS)'
          example: '1'
    TrafficDataResult:
      required:
      - error_code
      type: object
      properties:
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
        traffic:
          type: integer
          description: Total Bytes transfer over CDN by sites.
    TrafficRequest:
      type: object
      properties:
        filter_time:
          type: string
          description: 'This field define the time range you want to filter, format
            is %d/%m/%Y %H:%M:%S - %d/%m/%Y %H:%M:%S. Default - fromTime: now()-30mins,
            toTime:: now()'
          example: 01/08/2020 00:00:01 - 01/08/2020 23:59:59
        group_id:
          type: integer
          description: Group ID that you want to get data from. You could find available
            groups from api get list Group
          example: 100
        site_id:
          type: array
          description: List Site ID that you want to get data. Default value is []
            - get all sites that are available on Group. Max 50 sites are allowed.
          example:
          - 1001
          - 1002
          items:
            type: integer
        source_type:
          type: string
          description: 'Filter by source: ORIGIN or EDGE.'
          example: EDGE
    TransferLimiting:
      type: object
      properties:
        enable_limit_rate:
          type: integer
          description: 'Option: 1(on) / 0(off)'
          example: 0
        limit_rate:
          type: integer
          description: 'Limit Rate Size by Kbps. Value from: 1 to 1048576'
          example: 1
    URLSetting:
      type: object
      properties:
        cache_hit_number:
          type: integer
          description: Number of requests will be cached. Values [0-100]
        cors_domains:
          type: array
          description: List cors header domains.
          items:
            type: string
        enable_cache_cdn:
          type: integer
          description: 'Define when and for how long content is stored on the CDN
            cache before it expires and is replaced with new content from your origin.
            Option: 1(on) / 0(off)'
        enable_cache_query:
          type: integer
          description: 'Enable Cache Query String Param. Option: 1(on) / 0(off)'
        enable_cors:
          type: integer
          description: 'Enable CORS Support. Option: 1(on) / 0(off)'
        enable_download_file:
          type: integer
          description: 'Enable Download File. Option: 1(on) / 0(off)'
        enable_geoip_header:
          type: integer
          description: 'Enable Header GeoIP. Option: 1(on) / 0(off)'
        enable_hitmiss_header:
          type: integer
          description: 'Enabled Hit/Miss attribute on Header. Option: 1(on) / 0(off)'
        id:
          type: integer
          description: Setting id
        max_age:
          type: integer
          description: 'Set default browser expiration time for cached assets that
            don''t already have an expiration time set on the origin. valid values
            from: -1 to 31536000. Default: 25200 secs'
          example: 2592000
        path:
          type: string
          description: URI path
        status:
          type: string
          description: Site's status. (ACTIVE|DISABLED|PROCESSING)
        ttl:
          type: integer
          description: 'Define when and for how long content is stored on the CDN
            cache before it expires and is replaced with new content from your origin.
            valid values from: 0 to 31536000. Default: 25200 secs'
    URLSettingAddResult:
      required:
      - error_code
      type: object
      properties:
        error_code:
          type: integer
          description: Error code from server
        id:
          type: string
          description: Setting id
        message:
          type: string
          description: Response's message
    URLSettingForm:
      type: object
      properties:
        cache_hit_number:
          type: integer
          description: Number of requests will be cached. Values [0-100]
          example: 1
        cors_domains:
          type: array
          description: List cors header domains.
          example:
          - domain1.com
          - domain2.com
          items:
            type: string
        enable_cache_cdn:
          type: integer
          description: 'Define when and for how long content is stored on the CDN
            cache before it expires and is replaced with new content from your origin.
            Option: 1(on) / 0(off)'
          example: 0
        enable_cache_query:
          type: integer
          description: 'Enable Cache Query String Param. Option: 1(on) / 0(off)'
          example: 0
        enable_cors:
          type: integer
          description: 'Enable CORS Support. Option: 1(on) / 0(off)'
          example: 0
        enable_download_file:
          type: integer
          description: 'Enable Download File. Option: 1(on) / 0(off)'
          example: 0
        enable_geoip_header:
          type: integer
          description: 'Enable Header GeoIP. Option: 1(on) / 0(off)'
          example: 0
        enable_hitmiss_header:
          type: integer
          description: 'Enabled Hit/Miss attribute on Header. Option: 1(on) / 0(off)'
          example: 0
        max_age:
          type: integer
          description: 'Set default browser expiration time for cached assets that
            don''t already have an expiration time set on the origin. valid values
            from: -1 to 31536000. Default: 25200 secs'
          example: 2592000
        path:
          type: string
          description: URI path
          example: "/path/static"
        ttl:
          type: integer
          description: 'Define when and for how long content is stored on the CDN
            cache before it expires and is replaced with new content from your origin.
            valid values from: 0 to 31536000. Default: 25200 secs'
          example: 2592000
    URLSettingResult:
      required:
      - error_code
      type: object
      properties:
        data:
          "$ref": "#/components/schemas/URLSetting"
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    URLSettingUpdateForm:
      type: object
      properties:
        cache_hit_number:
          type: integer
          description: Number of requests will be cached. Values [0-100]
          example: 1
        cors_domains:
          type: array
          description: List cors header domains.
          example:
          - domain1.com
          - domain2.com
          items:
            type: string
        enable_cache_cdn:
          type: integer
          description: 'Define when and for how long content is stored on the CDN
            cache before it expires and is replaced with new content from your origin.
            Option: 1(on) / 0(off)'
          example: 0
        enable_cache_query:
          type: integer
          description: 'Enable Cache Query String Param. Option: 1(on) / 0(off)'
          example: 0
        enable_cors:
          type: integer
          description: 'Enable CORS Support. Option: 1(on) / 0(off)'
          example: 0
        enable_download_file:
          type: integer
          description: 'Enable Download File. Option: 1(on) / 0(off)'
          example: 0
        enable_geoip_header:
          type: integer
          description: 'Enable Header GeoIP. Option: 1(on) / 0(off)'
          example: 0
        enable_hitmiss_header:
          type: integer
          description: 'Enabled Hit/Miss attribute on Header. Option: 1(on) / 0(off)'
          example: 0
        id:
          type: string
          description: Setting id
        max_age:
          type: integer
          description: 'Set default browser expiration time for cached assets that
            don''t already have an expiration time set on the origin. valid values
            from: -1 to 31536000. Default: 25200 secs'
          example: 2592000
        path:
          type: string
          description: URI path
          example: "/path/static"
        ttl:
          type: integer
          description: 'Define when and for how long content is stored on the CDN
            cache before it expires and is replaced with new content from your origin.
            valid values from: 0 to 31536000. Default: 25200 secs'
          example: 2592000
    UserAgentProtection:
      type: object
      properties:
        useragent_protection_enable:
          type: integer
          description: 'This option has been created to stop asset/media leakage by
            blocking User-Agent that you not trust. Option: 1(on) / 0(off)'
          example: 0
        useragent_protection_list:
          type: array
          description: 'List allowed useragent. Eg: Chrome, Mozilla/5.0 ..'
          example:
          - Chrome
          - Mozilla/5.0
          items:
            type: string
    UserEmailForm:
      type: object
      properties:
        email:
          type: string
          description: User email
          format: email
    UserInfo:
      type: object
      properties:
        email:
          type: string
          description: User email
          format: email
        full_name:
          type: string
          description: User full name
          example: Hoang Duong
        id:
          type: integer
          description: User ID
          example: 0
        package:
          description: CDN Package
          example:
            id: 1
            name: Standard
          allOf:
          - "$ref": "#/components/schemas/Package"
        verify:
          type: integer
          description: 'Set verify user, if this option is enabled then you can using
            service without submit ticket request.  Option: 1(on) / 0(off)'
          example: 0
    UserKeyResult:
      required:
      - error_code
      type: object
      properties:
        api_key:
          type: string
          description: User's API key information
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
    UserResult:
      required:
      - error_code
      type: object
      properties:
        data:
          description: Data information
          allOf:
          - "$ref": "#/components/schemas/UserInfo"
        error_code:
          type: integer
          description: Error code from server
        message:
          type: string
          description: Response's message
  responses:
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    '404':
      description: Not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    '422':
      description: Could not process entity
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    '500':
      description: Fatal error
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
