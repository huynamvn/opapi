components:
  responses:
    '400':
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
            type: object
      description: Bad request
    '401':
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
            type: object
      description: Unauthorized
    '403':
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
            type: object
      description: Forbidden
    '404':
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
            type: object
      description: Not found
    '422':
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
            type: object
      description: Could not process entity
    '500':
      content:
        application/json:
          schema:
            properties:
              message:
                type: string
            type: object
      description: Fatal error
  schemas:
    AddCertForm:
      properties:
        cert_crt:
          description: CNAME SSL Certification CRT in BASE64 string
          example: base64_string
          type: string
        cert_key:
          description: CNAME SSL Certification private key in BASE64 string
          example: base64_string
          type: string
      required:
      - cert_crt
      - cert_key
      type: object
    CNAME:
      properties:
        domain:
          description: CNAME domain
          example: my-cname.sport.com
          type: string
        id:
          description: ID of CNAME
          example: 1
          type: integer
        ssl_cert:
          allOf:
          - $ref: '#/components/schemas/AddCertForm'
          description: CNAME SSL Certification info
          example: '{}'
        status:
          description: CNAME's status. (ACTIVE|UNVERIFIED|PROCESSING)
          example: ACTIVE
          type: string
        verify_text:
          description: CNAME text verification
          example: hkiG9w0BAQEFAASCBKYwggSiAg
          type: string
      type: object
    CNAMEInfoResult:
      properties:
        data:
          $ref: '#/components/schemas/CNAME'
        error_code:
          description: Error code from server
          type: integer
        message:
          description: Response's message
          type: string
      required:
      - error_code
      type: object
    CNAMEListResult:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CNAME'
          type: array
        error_code:
          description: Error code from server
          type: integer
        message:
          description: Response's message
          type: string
      required:
      - error_code
      type: object
    CName:
      properties:
        id:
          description: ID of CNAME
          type: integer
        name:
          description: CNAME domain
          example: cname-sport.cdn.com
          type: string
      type: object
    DefaultDict:
      properties:
        key:
          example: value
          type: string
      type: object
    Group:
      properties:
        id:
          description: ID of group
          type: integer
        name:
          description: Name of group
          type: string
      type: object
    Package:
      properties:
        id:
          description: CDN Package ID
          example: 1
          type: integer
        name:
          description: CDN Package name
          type: string
      type: object
    Site:
      properties:
        backup_origin:
          description: Origin backup. Domain or IP Address.
          type: string
        backup_port:
          description: Origin backup port.
          type: string
        cache_hit_number:
          description: 'Define number of request to an asset or media before edge
            perform cache these data. values: 1 to 100.'
          type: integer
        cache_keys_zone_size:
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
          type: integer
        cache_max_size:
          description: 'Set upper limit of the size cache on CDN. values: 1 to 10000.
            Default: 200 GB'
          type: integer
        cache_path_inactive_size:
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
          type: integer
        cache_path_inactive_size_type:
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
          type: string
        cdn_domain:
          description: Site's cdn domain service.
          type: string
        cdn_protocol:
          description: 'Site''s CDN protocol. values: HTTP | SSL | HTTP,SSL'
          type: string
        cname:
          items:
            $ref: '#/components/schemas/CName'
          type: array
        cors_domains:
          description: List cors header domains.
          items:
            type: string
          type: array
        customize_header_enable:
          description: 'This option allow to adding valid customized header on response.
            Option: 1(on) / 0(off)'
          type: integer
        customize_header_items:
          description: Customize header items.
          items:
            $ref: '#/components/schemas/DefaultDict'
          type: array
        delivery_type:
          description: 'Site''s delivery type. Value: 1(LIVE) | 2(VOD) | 3(STATIC
            ASSET)'
          type: integer
        dev_mode:
          description: Dev mode for testing purpose. When this option is enable, cdn
            caching wil be disabled. 1(on) / 0(off)
          type: integer
        enable_aes:
          description: 'Use Encryption to protect your asset/media over internet.
            Option: 1(on) / 0(off)'
          type: integer
        enable_aes_refresh_token:
          description: 'This makes your content more secure, as it cannot be easily
            decoded by unauthorized users. Option: 1(on) / 0(off)'
          type: integer
        enable_backup:
          description: Enable backup origin. 1(on) / 0(off)
          type: integer
        enable_brotli:
          description: 'Cache Brotli compressed assets from the origin server (Content-Encoding:
            br). Only enable this feature if your origin supports Brotli compression.
            Option: 1(on) / 0(off)'
          type: integer
        enable_cache_host_key:
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
          type: integer
        enable_cache_path_option:
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
          type: integer
        enable_cached_query_params:
          description: 'Enable cached query by params. Option: 1(on) / 0(off)'
          type: integer
        enable_cors:
          description: 'Enable CORS Support. Option: 1(on) / 0(off)'
          type: integer
        enable_download_file:
          description: 'Enabled Download File. Option: 1(on) / 0(off)'
          type: integer
        enable_gzip:
          description: 'GZIP compression is enabled by default on all sites. By default,
            GZIP compresses txt, js, html, and css files, and the text/* mime type.
            Option: 1(on) / 0(off)'
          type: integer
        enable_host_header_forwarding:
          description: 'If enabled, we will pass the host header used in the CDN request
            when requesting the file from your origin domain. For this option to work,
            your origin server must accept requests from the CDN URL/CNAME domains.
            Option: 1(on) / 0(off)'
          type: integer
        enable_http2:
          description: 'Enable http2. Option: 1(on) / 0(off)'
          type: integer
        enable_redirect_http_to_https:
          description: 'Enable redirect http to https. Option: 1(on) / 0(off)'
          type: integer
        enable_request_collapsing:
          description: 'When this option is enable, What the CDN do is to take all
            the requests and ''collapse'' them into a single request. When the origin
            responds with the file, the CDN delivers the file to all the clients that
            requested it. Option: 1(on) / 0(off)'
          type: integer
        enable_secure_http_methods:
          description: 'Enable secure HTTP methods. Option: 1(on) / 0(off)'
          type: integer
        firewall_setting:
          $ref: '#/components/schemas/SiteFirewallSetting'
        group:
          $ref: '#/components/schemas/Group'
        id:
          description: Id of site
          type: integer
        ignore_set_cookie:
          description: 'Ignore set cookie. Option: 1(on) / 0(off)'
          type: integer
        max_age:
          description: 'Set default browser expiration time for cached assets that
            don''t already have an expiration time set on the origin. valid values
            from: -1 to 31536000. Default: 25200 secs'
          type: integer
        name:
          description: Site's name
          type: string
        origin:
          description: Site origin ip/domain
          type: string
        origin_ssl:
          description: Site origin ssl enable. 1(on) / 0(off)
          type: integer
        request_collapsing_timeout:
          description: By sec. Value from 1 to 10.
          type: integer
        secure_cdn_link_by_ip:
          description: 'Allow secure link by client IP. Option: 1(on) / 0(off)'
          type: integer
        secure_cdn_link_enable:
          description: 'Enable secure cdn link. Option: 1(on) / 0(off)'
          type: integer
        secure_cdn_link_key:
          description: Secure link secret key.
          type: string
        secure_cdn_link_type:
          description: 'Secure link type. Option: 1(By params) | 2(By path)'
          type: integer
        secure_http_methods:
          description: 'List HTTP methods. Values: POST|PUT|PATCH'
          items:
            type: string
          type: array
        secure_http_refer:
          description: List Referer's domains.
          items:
            type: string
          type: array
        secure_http_refer_allow_none:
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
          type: integer
        secure_http_refer_enable:
          description: 'Enable secure http referer option. Option: 1(on) / 0(off)'
          type: integer
        secure_http_refer_wildcard:
          description: List Referer's wildcard domains.
          items:
            type: string
          type: array
        status:
          description: Site's status. (ACTIVE|DISABLED|PROCESSING)
          type: string
        ttl:
          description: 'Define when and for how long content is stored on the CDN
            cache before it expires and is replaced with new content from your origin.
            valid values from: 0 to 31536000. Default: 25200 secs'
          type: integer
        useragent_protection_enable:
          description: 'This option has been created to stop asset/media leakage by
            blocking User-Agent that you not trust. Option: 1(on) / 0(off)'
          type: integer
        useragent_protection_list:
          description: 'List allowed useragent. Eg: Chrome, Mozilla/5.0 ..'
          items:
            type: string
          type: array
      type: object
    SiteEdgeSetting:
      properties:
        cache_hit_number:
          description: 'Define number of request to an asset or media before edge
            perform cache these data. values: 1 to 100.'
          example: 1
          type: integer
        cors_domains:
          description: List cors header domains.
          example:
          - cors1.sport.com
          - cors2.sport.com
          items:
            type: string
          type: array
        customize_header_enable:
          description: 'This option allow to adding valid customized header on response.
            Option: 1(on) / 0(off)'
          example: 0
          type: integer
        customize_header_items:
          description: Customize header items.
          example:
          - x-customize: customize-value
          items:
            $ref: '#/components/schemas/DefaultDict'
          type: array
        enable_aes:
          description: 'Use Encryption to protect your asset/media over internet.
            Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_aes_refresh_token:
          description: 'This makes your content more secure, as it cannot be easily
            decoded by unauthorized users. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_brotli:
          description: 'Cache Brotli compressed assets from the origin server (Content-Encoding:
            br). Only enable this feature if your origin supports Brotli compression.
            Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_cached_query_params:
          description: 'Enable cached query by params. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_cors:
          description: 'Enable CORS Support. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_download_file:
          description: 'Enabled Download File. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_gzip:
          description: 'GZIP compression is enabled by default on all sites. By default,
            GZIP compresses txt, js, html, and css files, and the text/* mime type.
            Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_host_header_forwarding:
          description: 'If enabled, we will pass the host header used in the CDN request
            when requesting the file from your origin domain. For this option to work,
            your origin server must accept requests from the CDN URL/CNAME domains.
            Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_http2:
          description: 'Enable http2. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_redirect_http_to_https:
          description: 'Enable redirect http to https. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_request_collapsing:
          description: 'When this option is enable, What the CDN do is to take all
            the requests and ''collapse'' them into a single request. When the origin
            responds with the file, the CDN delivers the file to all the clients that
            requested it. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_secure_http_methods:
          description: 'Enable secure HTTP methods. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        ignore_set_cookie:
          description: 'Ignore set cookie. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        max_age:
          description: 'Set default browser expiration time for cached assets that
            don''t already have an expiration time set on the origin. valid values
            from: -1 to 31536000. Default: 25200 secs'
          example: 25200
          type: integer
        request_collapsing_timeout:
          description: By sec. Value from 1 to 10.
          example: 3
          type: integer
        secure_cdn_link_by_ip:
          description: 'Allow secure link by client IP. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        secure_cdn_link_enable:
          description: 'Enable secure cdn link. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        secure_cdn_link_key:
          description: Secure link secret key.
          example: your-private-key
          type: string
        secure_cdn_link_type:
          description: 'Secure link type. Option: 1(By params) | 2(By path)'
          example: 1
          type: integer
        secure_http_methods:
          description: 'List HTTP methods. Values: POST|PUT|PATCH'
          example:
          - PURGE
          - OPTION
          items:
            type: string
          type: array
        secure_http_refer:
          description: List Referer's domains.
          example:
          - refer1.sport.com
          - refer2.sport.com
          items:
            type: string
          type: array
        secure_http_refer_allow_none:
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        secure_http_refer_enable:
          description: 'Enable secure http referer option. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        secure_http_refer_wildcard:
          description: List Referer's wildcard domains.
          example:
          - '*.sport.com'
          - '*.football.com'
          items:
            type: string
          type: array
        ttl:
          description: 'Define when and for how long content is stored on the CDN
            cache before it expires and is replaced with new content from your origin.
            valid values from: 0 to 31536000. Default: 25200 secs'
          example: 25200
          type: integer
        useragent_protection_enable:
          description: 'This option has been created to stop asset/media leakage by
            blocking User-Agent that you not trust. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        useragent_protection_list:
          description: 'List allowed useragent. Eg: Chrome, Mozilla/5.0 ..'
          example:
          - Chrome
          - Mozilla/5.0
          items:
            type: string
          type: array
      type: object
    SiteEdgeSettingForm:
      properties:
        cache_hit_number:
          description: 'Define number of request to an asset or media before edge
            perform cache these data. values: 1 to 100.'
          example: 1
          type: integer
        cors_domains:
          description: List cors header domains.
          example:
          - cors1.sport.com
          - cors2.sport.com
          items:
            type: string
          type: array
        customize_header_enable:
          description: 'This option allow to adding valid customized header on response.
            Option: 1(on) / 0(off)'
          example: 0
          type: integer
        customize_header_items:
          description: Customize header items.
          example:
          - x-customize: customize-value
          items:
            $ref: '#/components/schemas/DefaultDict'
          type: array
        enable_aes:
          description: 'Use Encryption to protect your asset/media over internet.
            Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_aes_refresh_token:
          description: 'This makes your content more secure, as it cannot be easily
            decoded by unauthorized users. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_brotli:
          description: 'Cache Brotli compressed assets from the origin server (Content-Encoding:
            br). Only enable this feature if your origin supports Brotli compression.
            Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_cached_query_string:
          description: 'Enable cached query by params. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_cors:
          description: 'Enable CORS Support. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_download_file:
          description: 'Enabled Download File. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_gzip:
          description: 'GZIP compression is enabled by default on all sites. By default,
            GZIP compresses txt, js, html, and css files, and the text/* mime type.
            Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_host_header_forwarding:
          description: 'If enabled, we will pass the host header used in the CDN request
            when requesting the file from your origin domain. For this option to work,
            your origin server must accept requests from the CDN URL/CNAME domains.
            Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_http2:
          description: 'Enable http2. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_request_collapsing:
          description: 'When this option is enable, What the CDN do is to take all
            the requests and ''collapse'' them into a single request. When the origin
            responds with the file, the CDN delivers the file to all the clients that
            requested it. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        enable_secure_http_methods:
          description: 'Enable secure HTTP methods. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        force_to_https:
          description: 'Enable redirect http to https. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        ignore_set_cookie:
          description: 'Ignore set cookie. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        max_age:
          description: 'Set default browser expiration time for cached assets that
            don''t already have an expiration time set on the origin. valid values
            from: -1 to 31536000. Default: 25200 secs'
          example: 25200
          type: integer
        request_collapsing_timeout:
          description: By sec. Value from 1 to 10.
          example: 3
          type: integer
        secure_cdn_link_by_ip:
          description: 'Allow secure link by client IP. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        secure_cdn_link_enable:
          description: 'Enable secure cdn link. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        secure_cdn_link_key:
          description: Secure link secret key.
          example: your-private-key
          type: string
        secure_cdn_link_type:
          description: 'Secure link type. Option: 1(By params) | 2(By path)'
          example: 1
          type: integer
        secure_http_methods:
          description: 'List HTTP methods. Values: POST|PUT|PATCH'
          example:
          - PURGE
          - OPTION
          items:
            type: string
          type: array
        secure_http_refer:
          description: List Referer's domains.
          example:
          - refer1.sport.com
          - refer2.sport.com
          items:
            type: string
          type: array
        secure_http_refer_allow_none:
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        secure_http_refer_enable:
          description: 'Enable secure http referer option. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        secure_http_refer_wildcard:
          description: List Referer's wildcard domains.
          example:
          - '*.sport.com'
          - '*.football.com'
          items:
            type: string
          type: array
        ttl:
          description: 'Define when and for how long content is stored on the CDN
            cache before it expires and is replaced with new content from your origin.
            valid values from: 0 to 31536000. Default: 25200 secs'
          example: 25200
          type: integer
        useragent_protection_enable:
          description: 'This option has been created to stop asset/media leakage by
            blocking User-Agent that you not trust. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        useragent_protection_list:
          description: 'List allowed useragent. Eg: Chrome, Mozilla/5.0 ..'
          example:
          - Chrome
          - Mozilla/5.0
          items:
            type: string
          type: array
      type: object
    SiteEdgeSettingResult:
      properties:
        data:
          $ref: '#/components/schemas/SiteEdgeSetting'
        error_code:
          description: Error code from server
          type: integer
        message:
          description: Response's message
          type: string
      required:
      - error_code
      type: object
    SiteFirewallSetting:
      properties:
        enable_limit_rate:
          description: 'Allows you to limit the transfer rate of individual client
            connections. The rate is expressed in Kilobits per second. Option: 1(on)
            / 0(off)'
          example: 0
          type: integer
        geo_protection_countries:
          description: List of Country Codes. You can find from api /country/list
          example:
          - AD
          - AE
          items:
            type: string
          type: array
        geo_protection_enable:
          description: 'Setting blacklist countries. Any requests from these countries
            can not access your asset/media. Option: 1(on) / 0(off)'
          example: 0
          type: integer
        geo_protection_type:
          description: 'Option: 1(Whitelist) / 2(Blacklist)'
          example: 1
          type: integer
        ip_protection_cidr:
          description: List of CIDR Address.
          example:
          - 192.168.129.23/17
          - 10.0.0.0/24
          items:
            type: string
          type: array
        ip_protection_enable:
          description: 'Setting your blacklist and whitelist by CIDR. Option: 1(on)
            / 0(off)'
          example: 0
          type: integer
        ip_protection_type:
          description: 'Option: 1(Whitelist) / 2(Blacklist)'
          example: 1
          type: integer
        limit_rate:
          description: 'Limit Rate Size by Kbps. Value from: 1 to 1048576'
          example: 1
          type: integer
        rate_limiting_enable:
          description: 'Protect your site or API from malicious traffic by blocking
            client IP addresses that hit a URL pattern and exceed a threshold you
            define. Your existing Rate Limiting Rules are listed below. Option: 1(on)
            / 0(off)'
          example: 0
          type: integer
        rate_limiting_request:
          description: 'Number of requests. Values: 1-9999'
          example: 1
          type: integer
        rate_limiting_request_type:
          description: 'Support 2 types: s (requests/second), m (requests/minute)'
          example: s
          type: string
        rate_limiting_type:
          description: 'Option: 1(Limit by URI), 2(Limit by IP Address)'
          example: 1
          type: integer
      type: object
    SiteFirewallSettingResult:
      properties:
        data:
          $ref: '#/components/schemas/SiteFirewallSetting'
        error_code:
          description: Error code from server
          type: integer
        message:
          description: Response's message
          type: string
      required:
      - error_code
      type: object
    SiteForm:
      properties:
        delivery_type:
          description: 'Site''s delivery type. Value: 1(LIVE) | 2(VOD) | 3(STATIC
            ASSET)'
          example: '3'
          type: string
        name:
          description: Site's name
          example: Static Asset Sport
          type: string
        origin:
          description: Site origin ip/domain
          example: static.sport.com
          type: string
        origin_port:
          description: Site origin port
          example: '443'
          type: string
        origin_protocol:
          description: 'Site origin protocol. Value: 0 (HTTP) | 1(HTTPS)'
          example: '1'
          type: string
      required:
      - delivery_type
      - name
      - origin
      - origin_port
      - origin_protocol
      type: object
    SiteInfoResult:
      properties:
        data:
          $ref: '#/components/schemas/Site'
        error_code:
          description: Error code from server
          type: integer
        message:
          description: Response's message
          type: string
      required:
      - error_code
      type: object
    SiteListResult:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Site'
          type: array
        error_code:
          description: Error code from server
          type: integer
        message:
          description: Response's message
          type: string
      required:
      - error_code
      type: object
    SiteSettingCorsHeaderData:
      properties:
        cors_domains:
          description: List cors header domains.
          items:
            type: string
          type: array
        enable_cors:
          description: 'Enable cors header. Option: 1(on) / 0(off). When CORS support
            is enabled, If you don''t set any domains, default value in header is
            ''Access-Control-Allow-Origin: *'''
          type: integer
      type: object
    SiteSettingCorsHeaderResult:
      properties:
        data:
          $ref: '#/components/schemas/SiteSettingCorsHeaderData'
        error_code:
          description: Error code from server
          type: integer
        message:
          description: Response's message
          type: string
      required:
      - error_code
      type: object
    SiteSettingRefererData:
      properties:
        secure_http_refer:
          description: List Referer's domains.
          items:
            type: string
          type: array
        secure_http_refer_allow_none:
          description: 'Allow none referer domain. Option: 1(on) / 0(off)'
          type: integer
        secure_http_refer_enable:
          description: 'Enable secure http referer option. Option: 1(on) / 0(off)'
          type: integer
        secure_http_refer_wildcard:
          description: List Referer's wildcard domains.
          items:
            type: string
          type: array
      type: object
    SiteSettingRefererResult:
      properties:
        data:
          $ref: '#/components/schemas/SiteSettingRefererData'
        error_code:
          description: Error code from server
          type: integer
        message:
          description: Response's message
          type: string
      required:
      - error_code
      type: object
    SiteSetupForm:
      properties:
        backup_origin:
          description: Origin backup. Domain or IP Address.
          example: backup-static.sport.com
          type: string
        backup_origin_port:
          description: Origin backup port.
          example: '443'
          type: string
        cdn_protocols:
          description: 'Site''s CDN protocol. values: HTTP | SSL | HTTP,SSL'
          example: HTTP
          type: string
        enable_backup:
          description: Enable backup origin. 1(on) / 0(off)
          example: '0'
          type: string
        origin:
          description: Site origin ip/domain
          example: static.sport.com
          type: string
        origin_port:
          description: Site origin port
          example: '443'
          type: string
        origin_protocol:
          description: 'Site origin protocol. Value: 0 (HTTP) | 1(HTTPS)'
          example: '1'
          type: string
      required:
      - backup_origin
      - backup_origin_port
      - cdn_protocols
      - enable_backup
      - origin
      - origin_port
      - origin_protocol
      type: object
    UserInfo:
      properties:
        email:
          description: User email
          format: email
          type: string
        full_name:
          description: User full name
          example: Hoang Duong
          type: string
        id:
          description: User ID
          example: 0
          type: integer
        package:
          allOf:
          - $ref: '#/components/schemas/Package'
          description: CDN Package
          example:
            id: 1
            name: Standard
        verify:
          description: 'Set verify user, if this option is enabled then you can using
            service without submit ticket request.  Option: 1(on) / 0(off)'
          example: 0
          type: integer
      type: object
    UserResult:
      properties:
        data:
          allOf:
          - $ref: '#/components/schemas/UserInfo'
          description: Data information
        error_code:
          description: Error code from server
          type: integer
        message:
          description: Response's message
          type: string
      required:
      - error_code
      type: object
info:
  description: |
    # Introduction
    Our API has predictable, resource-oriented URLs and uses HTTP response codes to indicate API errors. We use built-in HTTP features, such as HTTP authentication and HTTP terminology, which can be understood by HTTP clients. JSON will be returned in all responses from the API, including errors.
    # Responses
    The API uses HTTP response codes to show success or failure of an API request. In general, 2xx codes indicate success, 4xx codes indicate an error that resulted from the provided information (e.g. a required parameter is missing or invalid, etc.), and codes in the 5xx range indicate an error connected with our servers.
    # HTTP Status Code Summary
     | Mã lỗi | Mô tả                                                         |
      |-------|--------------------------------------------------------------|
      | 200   | OK - Yêu cầu đã hoàn thành thành công.                            |
      | 400   | Bad Request - Thiếu tham số bắt buộc.                                |
      | 401   | Unauthorized - Thông tin đăng nhập không hợp lệ hoặc mã thông báo API của bạn đã hết hạn. |
      | 403   | Forbidden - Truy cập bị từ chối. Bạn không có đủ quyền truy cập.                 |
      | 404   | Not Found - Mục được yêu cầu không tồn tại.                          |
      | 429   | Too Many Requests - Bạn đã vượt quá số lượng yêu cầu cho tài nguyên của bạn.        |
      | 503   | Service Unavailable - Bạn đã mắc lỗi trong các tham số yêu cầu hoặc dịch vụ hiện đang không khả dụng. |
      | 500 502 504   | Lỗi máy chủ - Đã xảy ra sự cố từ phía chúng tôi. |      
  title: CDN
  version: 1.0.0
  x-logo:
    url: https://kdata.vn/kdata/images/icon/logo-KDATA-vector.svg
openapi: 3.0.2
externalDocs:
  description: |
    Welcome to CDN API documentation. The API documentation provides requests to manage CDN service and get statistics.
  url: 'https://api.kcdn.vn/docs/'
paths:
  /api/v1.0/analytic/get-data:
    post:
      description: Get Analytics data by queries and filters
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                filter_time:
                  description: "This field define the time range you want to filter,\
                    \ \nformat is %d/%m/%Y %H:%M:%S - %d/%m/%Y %H:%M:%S. Default -\
                    \ fromTime: now()-30mins, toTime:: now()"
                  example: 01/08/2020 00:00:01 - 01/08/2020 23:59:59
                  type: string
                group_id:
                  description: Group ID that you want to get data from.
                  example: 1
                  type: integer
                queries:
                  description: 'Support items in this list: [''status_type_pie'',
                    ''hitmiss_pie'', ''file_size_pie'', ''file_type_pie'', ''site'',
                    ''referer'']'
                  example:
                  - status_type_pie
                  - hitmiss_pie
                  items:
                    type: string
                  type: array
                site_ids:
                  description: List Site ID that you want to get data. Default value
                    is [] - get all sites that you've owned.
                  example:
                  - 1
                  - 2
                  items:
                    type: string
                  type: array
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    additionalProperties: true
                    type: object
                  error_code:
                    type: integer
                  message:
                    type: string
                required:
                - error_code
                type: object
          description: Purge Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Get Analytics data by queries and filters
      tags:
      - AnalyticApi
  /api/v1.0/caching/prefetch/{site_id}:
    post:
      description: Prefetch Cache
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the Site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                group_id:
                  description: Group ID that you want to get data from.
                  example: 1
                  type: integer
                list_files:
                  example:
                  - https://167051323.e.cdneverest.net/storage20/hh247/images/1535173995o-long-vien-2018.jpg
                  - https://167051323.e.cdneverest.net/storage20/hh247/images/1535173995o-long-vien-2019.jpg
                  items:
                    type: string
                  type: array
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
                type: object
          description: Prefetch Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Prefetch CDN caching by file urls
      tags:
      - CachingApi
  /api/v1.0/caching/purge/{site_id}:
    post:
      description: Purge Cache
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the Site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                group_id:
                  description: Group ID that you want to get data from.
                  example: 1
                  type: integer
                list_files:
                  example:
                  - https://167051323.e.cdneverest.net/storage20/hh247/images/1535173995o-long-vien-2018.jpg
                  - https://167051323.e.cdneverest.net/storage20/hh247/images/1535173995o-long-vien-2019.jpg
                  items:
                    type: string
                  type: array
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
                type: object
          description: Purge Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Purge CDN caching by file urls
      tags:
      - CachingApi
  /api/v1.0/caching/verify-result/{site_id}:
    post:
      description: This API is allow user to get result of request verify checksum
        cache cdn by url
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the Site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                file_url:
                  description: File url that you want to get verify result.
                  example: https://167051323.e.cdneverest.net/storage20/hh247/images/1535173995o-long-vien-2018.jpg
                  type: string
                group_id:
                  description: Group ID that you want to get data from.
                  example: 1
                  type: integer
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error_code:
                    type: integer
                  verify_result:
                    type: string
                type: object
          description: Get Verification Result Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: This API is allow user to get result of request verify checksum cache
        cdn by url
      tags:
      - CachingApi
  /api/v1.0/caching/verify/{site_id}:
    post:
      description: This API is allow user to verify checksum of cached files
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the Site
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                group_id:
                  description: Group ID that you want to get data from.
                  example: 1
                  type: integer
                list_files:
                  example:
                  - https://167051323.e.cdneverest.net/storage20/hh247/images/1535173995o-long-vien-2018.jpg
                  - https://167051323.e.cdneverest.net/storage20/hh247/images/1535173995o-long-vien-2019.jpg
                  items:
                    type: string
                  type: array
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
                type: object
          description: Verify Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: This API is allow user to verify checksum of cached files
      tags:
      - CachingApi
  /api/v1.0/cname/add-cert/{group_id}/{site_id}/{cname_id}:
    put:
      description: Enable inactivated Site
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the CNAME.
        explode: false
        in: path
        name: cname_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCertForm'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CNAMEInfoResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Enable inactivated Site
      tags:
      - CNAMEApi
  /api/v1.0/cname/add/{group_id}/{site_id}:
    post:
      description: add CNAME to CDN Site
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cname:
                  description: CNAME domain.
                  example: cdn.sport.com
                  type: string
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CNAMEInfoResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: add CNAME to CDN Site
      tags:
      - CNAMEApi
  /api/v1.0/cname/delete/{group_id}/{site_id}/{cname_id}:
    delete:
      description: Delete Site
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the CNAME.
        explode: false
        in: path
        name: cname_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
                required:
                - error_code
                type: object
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Delete Site
      tags:
      - CNAMEApi
  /api/v1.0/cname/generate-free-cert/{group_id}/{site_id}/{cname_id}:
    put:
      description: Generate LetsEncryption Cert
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the CNAME.
        explode: false
        in: path
        name: cname_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CNAMEInfoResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Generate LetsEncryption Cert
      tags:
      - CNAMEApi
  /api/v1.0/cname/info/{group_id}/{site_id}/{cname_id}:
    get:
      description: Get Site's CNAME information
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the CNAME.
        explode: false
        in: path
        name: cname_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CNAMEInfoResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Get Site's CNAME information
      tags:
      - CNAMEApi
  /api/v1.0/cname/list/{group_id}/{site_id}:
    get:
      description: List Site's CNAME in project
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CNAMEListResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: List Site's CNAME in project
      tags:
      - CNAMEApi
  /api/v1.0/cname/verify/{group_id}/{site_id}/{cname_id}:
    put:
      description: Verify CNAME
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the CNAME.
        explode: false
        in: path
        name: cname_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CNAMEInfoResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Verify CNAME
      tags:
      - CNAMEApi
  /api/v1.0/group/list:
    get:
      description: Get Member's Groups list
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      type: object
                    type: array
                  error_code:
                    type: integer
                  message:
                    type: string
                required:
                - error_code
                type: object
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Get Member's Groups list
      tags:
      - GroupApi
  /api/v1.0/site-setting/edge-setting/{group_id}/{site_id}:
    post:
      description: Setup Site Edge Setting
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteEdgeSettingForm'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteEdgeSettingResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Setup Site Edge Setting
      tags:
      - SiteSettingApi
  /api/v1.0/site-setting/firewall-setting/{group_id}/{site_id}:
    post:
      description: Setup Site Firewall Setting
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteFirewallSetting'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteFirewallSettingResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Setup Site Firewall Setting
      tags:
      - SiteSettingApi
  /api/v1.0/site-setting/update-cors:
    post:
      description: Update site cors header
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the project that site is belong to.
        explode: true
        in: query
        name: group_id
        required: true
        style: form
      - description: Numeric ID of the Site.
        explode: true
        in: query
        name: site_id
        required: true
        style: form
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cors_domains:
                  description: List cors header domains.
                  example:
                  - '*.sport.net'
                  - '*.space.net'
                  items:
                    type: string
                  type: array
                enable_cors:
                  description: 'Enable cors header. Option: 1(on) / 0(off). When CORS
                    support is enabled, If you don''t set any domains, default value
                    in header is ''Access-Control-Allow-Origin: *'''
                  example: 1
                  type: integer
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSettingCorsHeaderResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Update site cors header
      tags:
      - SiteSettingApi
  /api/v1.0/site-setting/update-cors/{group_id}/{site_id}:
    post:
      description: Update site cors header
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cors_domains:
                  description: List cors header domains.
                  example:
                  - '*.sport.net'
                  - '*.space.net'
                  items:
                    type: string
                  type: array
                enable_cors:
                  description: 'Enable cors header. Option: 1(on) / 0(off). When CORS
                    support is enabled, If you don''t set any domains, default value
                    in header is ''Access-Control-Allow-Origin: *'''
                  example: 1
                  type: integer
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSettingCorsHeaderResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Update site cors header
      tags:
      - SiteSettingApi
  /api/v1.0/site-setting/update-referer:
    post:
      description: Update site referer setting
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Numeric ID of the project that site is belong to.
        explode: true
        in: query
        name: group_id
        required: true
        style: form
      - description: Numeric ID of the Site.
        explode: true
        in: query
        name: site_id
        required: true
        style: form
      requestBody:
        content:
          application/json:
            schema:
              properties:
                secure_http_refer:
                  description: List Referer's domains.
                  example:
                  - refer1.sport.net
                  - refer2.sport.net
                  items:
                    type: string
                  type: array
                secure_http_refer_allow_none:
                  description: 'Allow none referer domain. Option: 1(on) / 0(off)'
                  example: 0
                  type: integer
                secure_http_refer_enable:
                  description: 'Enable secure http referer option. Option: 1(on) /
                    0(off)'
                  example: 1
                  type: integer
                secure_http_refer_wildcard:
                  description: List Referer's wildcard domains.
                  example:
                  - '*.sport.net'
                  - '*.space.net'
                  items:
                    type: string
                  type: array
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSettingRefererResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Update site referer setting
      tags:
      - SiteSettingApi
  /api/v1.0/site-setting/update-referer/{group_id}/{site_id}:
    post:
      description: Update site referer setting
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                secure_http_refer:
                  description: List Referer's domains.
                  example:
                  - refer1.sport.net
                  - refer2.sport.net
                  items:
                    type: string
                  type: array
                secure_http_refer_allow_none:
                  description: 'Allow none referer domain. Option: 1(on) / 0(off)'
                  example: 0
                  type: integer
                secure_http_refer_enable:
                  description: 'Enable secure http referer option. Option: 1(on) /
                    0(off)'
                  example: 1
                  type: integer
                secure_http_refer_wildcard:
                  description: List Referer's wildcard domains.
                  example:
                  - '*.sport.net'
                  - '*.space.net'
                  items:
                    type: string
                  type: array
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSettingRefererResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Update site referer setting
      tags:
      - SiteSettingApi
  /api/v1.0/site/create/{group_id}:
    post:
      description: Create CDN site
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteForm'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteInfoResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Create CDN site
      tags:
      - SiteApi
  /api/v1.0/site/delete/{group_id}/{site_id}:
    delete:
      description: Delete Site
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
                required:
                - error_code
                type: object
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Delete Site
      tags:
      - SiteApi
  /api/v1.0/site/disable-site/{group_id}/{site_id}:
    put:
      description: Disable an active Site
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
                required:
                - error_code
                type: object
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Disable an active Site
      tags:
      - SiteApi
  /api/v1.0/site/enable-site/{group_id}/{site_id}:
    put:
      description: Enable inactivated Site
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  error_code:
                    type: integer
                  message:
                    type: string
                required:
                - error_code
                type: object
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Enable inactivated Site
      tags:
      - SiteApi
  /api/v1.0/site/info/{group_id}/{site_id}:
    get:
      description: Get Site's metadata information
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteInfoResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Get Site's metadata information
      tags:
      - SiteApi
  /api/v1.0/site/list/{group_id}:
    get:
      description: List Site in project
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteListResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: List Site in project
      tags:
      - SiteApi
  /api/v1.0/site/site-setup/{group_id}/{site_id}:
    post:
      description: Setup CDN site
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project, you can find it on our dashboard
        explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric ID of the Site.
        explode: false
        in: path
        name: site_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteSetupForm'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteInfoResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Setup CDN site
      tags:
      - SiteApi
  /api/v1.0/statistic/get-data:
    post:
      description: Get Statistic data by queries and filters
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                filter_time:
                  description: 'This field define the time range you want to filter,
                    format is %d/%m/%Y %H:%M:%S - %d/%m/%Y %H:%M:%S. Default - fromTime:
                    now()-30mins, toTime:: now()'
                  example: 01/08/2020 00:00:01 - 01/08/2020 23:59:59
                  type: string
                group_id:
                  description: Group ID that you want to get data from.
                  example: 1
                  type: integer
                site_ids:
                  description: List Site ID that you want to get data. Default value
                    is [] - get all sites that you've owned.
                  example:
                  - 1
                  - 2
                  items:
                    type: string
                  type: array
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                  error_code:
                    type: integer
                  message:
                    type: string
                required:
                - error_code
                type: object
          description: Purge Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Get Statistic data by queries and filters
      tags:
      - StatisticApi
  /api/v1.0/statistic/get-file-type-data:
    post:
      description: Get Statistic data group by file type.
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                extensions:
                  description: List of extensions that you want to get data. Default
                    value is [] - get all extensions that your's sites served.
                  example:
                  - m3u8
                  - mp4
                  items:
                    type: string
                  type: array
                filter_time:
                  description: 'This field define the time range you want to filter,
                    format is %d/%m/%Y %H:%M:%S - %d/%m/%Y %H:%M:%S. Default - fromTime:
                    now()-30mins, toTime:: now()'
                  example: 01/08/2020 00:00:01 - 01/08/2020 23:59:59
                  type: string
                group_id:
                  description: Group ID that you want to get data from.
                  example: 1
                  type: integer
                site_ids:
                  description: List Site ID that you want to get data. Default value
                    is [] - get all sites that you've owned.
                  example:
                  - 1
                  - 2
                  items:
                    type: string
                  type: array
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                  error_code:
                    type: integer
                  message:
                    type: string
                required:
                - error_code
                type: object
          description: Purge Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Get Statistic data group by file type.
      tags:
      - StatisticApi
  /api/v1.0/statistic/get-referer-data/{offset}/{limit}:
    post:
      description: Get Analytics referer's data by Site
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      - description: Pagination - offset
        explode: false
        in: path
        name: offset
        required: true
        schema:
          type: integer
        style: simple
      - description: Pagination - number of response records limitation
        explode: false
        in: path
        name: limit
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                filter_time:
                  description: 'This field define the time range you want to filter,
                    format is %d/%m/%Y %H:%M:%S - %d/%m/%Y %H:%M:%S. Default - fromTime:
                    now()-30mins, toTime:: now()'
                  example: 01/08/2020 00:00:01 - 01/08/2020 23:59:59
                  type: string
                group_id:
                  description: Group ID that you want to get data from.
                  example: 1
                  type: integer
                site_ids:
                  description: List Site ID that you want to get data. Default value
                    is [] - get all sites that you've owned.
                  example:
                  - 1
                  - 2
                  items:
                    type: string
                  type: array
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                  error_code:
                    type: integer
                  message:
                    type: string
                required:
                - error_code
                type: object
          description: Purge Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Get Analytics referer's data by Site
      tags:
      - StatisticApi
  /api/v1.0/statistic/get-uri-data:
    post:
      description: Get Statistic url data by referer
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                filter_time:
                  description: 'This field define the time range you want to filter,
                    format is %d/%m/%Y %H:%M:%S - %d/%m/%Y %H:%M:%S. Default - fromTime:
                    now()-30mins, toTime:: now()'
                  example: 01/08/2020 00:00:01 - 01/08/2020 23:59:59
                  type: string
                group_id:
                  description: Group ID that you want to get data from.
                  example: 1
                  type: integer
                referers:
                  description: List referer domains that you get from api /statistic/get-referer-data
                  example:
                  - https://s1.evgcdn.net
                  - https://s3.evgcdn.net
                  items:
                    type: string
                  type: array
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                  error_code:
                    type: integer
                  message:
                    type: string
                required:
                - error_code
                type: object
          description: Purge Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Get Statistic url data by referer
      tags:
      - StatisticApi
  /api/v1.0/user/create:
    get:
      security:
      - jwt: []
      tags:
      - UserAPI
    post:
      description: Api create sub user
      parameters:
      - description: The API Authentication Key
        explode: false
        in: header
        name: X-Auth-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              ref: '#/components/schemas/RegisterUserForm'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResult'
          description: Successful
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      security:
      - jwt: []
      summary: Api create sub user
      tags:
      - UserAPI
servers:
- url: https://api.kcdn.vn
